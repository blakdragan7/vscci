<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup Label="VSModTemplate Properties">
    <TargetFramework>netstandard2.0</TargetFramework>
    <!-- These are necessary because we're kind of jury rigging everything together between .NET Standard 2.0 and .NET 4.5.2. -->
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- We also want to include debugging symbols in our NuGet packages, to make it easier for everyone (we don't care too much about the additional space requirement) -->
    <IncludeSymbols>true</IncludeSymbols>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- And SourceLink requires us to have a repository available -->
    <RepositoryUrl>https://gitlab.com/vsmods-public/foundation</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <!-- We have a custom Configuration, so need to add it here -->
    <Configurations>Debug;Release;ReleaseAndZip</Configurations>
  </PropertyGroup>

  <PropertyGroup Label="VSModTemplate Debug Properties" Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <!-- Template default references: -->
  <ItemGroup Label="VSModTemplate References">
    <Reference Include="VintagestoryAPI">
      <HintPath>$(VINTAGE_STORY)/VintagestoryAPI.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="VintagestoryLib">
      <HintPath>$(VINTAGE_STORY)/VintagestoryLib.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="VSSurvivalMod">
      <HintPath>$(VINTAGE_STORY)/Mods/VSSurvivalMod.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="VSEssentials">
      <HintPath>$(VINTAGE_STORY)/Mods/VSEssentials.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="VSCreativeMod">
      <HintPath>$(VINTAGE_STORY)/Mods/VSCreativeMod.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Harmony">
      <HintPath>$(VINTAGE_STORY)/Lib/0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="protobuf-net">
      <HintPath>$(VINTAGE_STORY)/Lib/protobuf-net.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="SQLite">
      <HintPath>$(VINTAGE_STORY)/Lib/System.Data.SQLite.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="cairo-sharp">
      <HintPath>$(VINTAGE_STORY)/Lib/cairo-sharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <PropertyGroup>
    <NoWarn>NU1605</NoWarn>
  </PropertyGroup>
  <!-- Template includes: -->
  <ItemGroup Label="VSModTemplate Includes">
    <!-- This is what allows us to do the fancy IL weaving so we end up with a single dependency-version-independent release .dll! -->
    <PackageReference Include="EngineIoClientDotNet" Version="0.9.22" />
    <PackageReference Include="ILRepack.Lib.Task" Version="0.1.7" PrivateAssets="all" />
    <!-- Actual project includes -->
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
    <PackageReference Include="SocketIoClientDotNet" Version="0.9.13" />
    <PackageReference Include="TwitchLib.Api" Version="3.2.3" />
    <PackageReference Include="WebSocket4Net" Version="0.14.1" />
  </ItemGroup>

  <!-- Template ReleaseAndZip: -->
  <PropertyGroup Label="Template ReleaseAndZipProperties" Condition="$(Configuration)=='ReleaseAndZip'">
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>
  <Target Name="Package" AfterTargets="CleanTheOutput" Condition="'$(Configuration)' == 'ReleaseAndZip'">
    <Delete Files="$(TargetDir)/$(TargetName).zip" ContinueOnError="true" />
    <ZipDirectory DestinationFile="$(TargetDir)\..\$(TargetName).zip" SourceDirectory="$(TargetDir)" Overwrite="true" />
    <RemoveDir Directories="$(TargetDir)" />
    <ReadLinesFromFile File="modinfo.json">
      <Output TaskParameter="Lines" ItemName="FileContents" />
    </ReadLinesFromFile>
    <PropertyGroup>
      <CorrectText>@(FileContents->'%(Identity)', '%0a%0d')</CorrectText>
      <CorrectVersionNumber>$([System.Text.RegularExpressions.Regex]::Match($(CorrectText), `\d+\.\d+\.\d+`))</CorrectVersionNumber>
    </PropertyGroup>
    <Move SourceFiles="$(TargetDir)\..\$(TargetName).zip" DestinationFiles="$(TargetDir)\$(TargetName)_v$(CorrectVersionNumber).zip" />
  </Target>

  <!-- Template content: -->
  <ItemGroup Label="VSModTemplate Content">
    <Content Include="assets/**">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <None Update="modinfo.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="assets/" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TwitchLib.PubSub\TwitchLib.PubSub\TwitchLib.PubSub.csproj" />
  </ItemGroup>
</Project>
